/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { EventEmitter } from "events";
import type { EventLog } from "web3-core";
import type { ContractOptions } from "web3-eth-contract";

import type { BaseContract, BlockType, Callback, NonPayableTransactionObject } from "./types.js";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface IPFSStorage extends BaseContract {
  _address: string;
  constructor(jsonInterface: any[], address?: string, options?: ContractOptions): IPFSStorage;
  clone(): IPFSStorage;
  methods: {
    getCID(): NonPayableTransactionObject<string>;

    storeCID(cid: string): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
